
networks:
  ragnet: {}

services:
  vllm:
    image: vllm/vllm-openai:latest
    container_name: vllm
    gpus: all
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,utility
      HF_TOKEN: ${HF_TOKEN}
      HF_HOME: /root/.cache/huggingface
    volumes:
      - ./cache:/root/.cache:rw${SELINUX_SUFFIX:-}
    command: >
      --model ${MODEL_NAME}
      --host 0.0.0.0
      --port 8000
      ${VLLM_EXTRA_ARGS}
    ports:
      - "${VLLM_PORT}:8000"
    networks: [ragnet]
    healthcheck:
      test: ["CMD-SHELL", "curl -sSf http://localhost:8000/v1/models >/dev/null || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 20
      start_period: 30s

  chroma:
    image: ghcr.io/chroma-core/chroma:0.5.4
    container_name: chroma
    environment:
      ANONYMIZED_TELEMETRY: "False"
    volumes:
      - ./cache/chroma:/chroma/chroma:rw${SELINUX_SUFFIX:-}
    # ports:
    #   - "${CHROMA_HTTP_PORT}:8000"
    networks: [ragnet]
    healthcheck:
      test: ["CMD-SHELL", "test -f /chroma/chroma/chroma.sqlite3"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 10s

  rag:
    build:
      context: .
      dockerfile: Dockerfile.rag
    image: activate/rag-proxy-plus:latest
    container_name: rag
    environment:
      CHROMA_HOST: chroma
      CHROMA_PORT: "8000"
      EMBEDDING_MODEL: ${EMBEDDING_MODEL}
      EMBEDDING_DEVICE: cpu
      HF_TOKEN: ${HF_TOKEN}
      HF_HOME: /root/.cache/huggingface
    volumes:
      - ./cache:/root/.cache:rw${SELINUX_SUFFIX:-}
    command: >
      python3 /app/rag_server.py
      --port 8080
      --collection activate_rag
      --embedding_model ${EMBEDDING_MODEL}
    ports:
      - "${RAG_PORT}:8080"
    networks: [ragnet]
    depends_on:
      chroma:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -sSf http://localhost:8080/health >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 10s

  indexer:
    image: activate/rag-proxy-plus:latest
    container_name: indexer
    environment:
      CHROMA_HOST: chroma
      CHROMA_PORT: "8000"
      EMBEDDING_DEVICE: cpu
      INDEXER_LOGLEVEL: INFO
      INDEXER_RESCAN_SECONDS: 10
    volumes:
      - ./docs:/docs:rw${SELINUX_SUFFIX:-}
      - ./cache:/cache:rw${SELINUX_SUFFIX:-}
      - ./indexer.py:/app/indexer.py
    command: >
      python3 /app/indexer.py --config /app/indexer_config.yaml --poll --rescan-seconds 10
    networks: [ragnet]
    depends_on:
      chroma:
        condition: service_healthy

  proxy:
    image: activate/rag-proxy-plus:latest
    container_name: proxy
    environment:
      RAG_URL: http://rag:8080
      VLLM_URL: http://vllm:8000/v1
      MODEL_NAME: ${MODEL_NAME}
      MAX_CONTEXT: ${MAX_CONTEXT}
      MAX_TOKENS: ${MAX_TOKENS}
      TEMPERATURE: ${TEMPERATURE}
      TOP_K: ${TOP_K}
      STREAM_READ_TIMEOUT: none
      STREAM_BRIDGE: ${STREAM_BRIDGE:-1}
      DEBUG_SSE: ${DEBUG_SSE:-0}
      IGNORE_CLIENT_STOP: ${IGNORE_CLIENT_STOP:-1}
      HF_TOKEN: ${HF_TOKEN}
      HF_HOME: /root/.cache/huggingface
    volumes:
      - ./cache:/root/.cache:rw${SELINUX_SUFFIX:-}
      - ./rag_proxy.py:/app/rag_proxy.py
    command: >
      python3 /app/rag_proxy.py
    ports:
      - "${PROXY_PORT}:8081"
    networks: [ragnet]
    depends_on:
      vllm:
        condition: service_healthy
      rag:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -sSf http://localhost:8081/health >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 10s
